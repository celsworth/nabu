- title 'Sitemap'

.md
	%h1
		Sitemap

	%p
		-# this won't scale far, but it doesn't have to.
		-# tags and search are about all I want here for now.
		- all_pages = true

		- if @search
			Pages containing
			%em= CGI.escapeHTML @search # user input!
			- all_pages = false

		- if @tags&.any?
			= @search ? 'and' : 'Pages' # ick.
			tagged with
			= @tags.map{|tag| "<em>#{tag.name}</em>"}.join(', ')
			- all_pages = false

		- if all_pages
			All Pages

	%ul.sitemap
		- @sitemap.all do |page|
			%li
				%a{href: "/p/#{page.name}"}= page.name
				&ndash;
				-# we're using a #published dataset so this is safe
				= page.latest_published.display_title

				%br

				- page.tags.each do |tag|
					%a.ui.mini.blue.label{href: "/sitemap/?tags=#{tag.name}"}
						%i.fa.fa-tag
						= tag.name

				- unless page.visible?
					%span.ui.mini.red.label
						%i.fa.fa-lock
						private

				%span.ui.mini.label
					%i.fa.fa-file
					= page.latest_published.content.length
					bytes

				%span.ui.mini.label
					%i.fa.fa-calendar
					modified
					%time.js-timeago{datetime: page.latest_published.created_at.iso8601}
						= page.latest_published.created_at

	%h2 Tag List
	- Tag.where(cms_pages: @sitemap).order(:name).all do |tag|
		%a.ui.mini.blue.label{href: "/sitemap/?tags=#{tag.name}"}
			%i.fa.fa-tag
			= tag.name



